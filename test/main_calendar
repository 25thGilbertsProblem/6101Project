from kivy.lang import Builder
from kivy.uix.floatlayout import FloatLayout

from kivymd.app import MDApp
from kivymd.uix.tab import MDTabsBase
from kivymd.uix.list import TwoLineAvatarListItem, ThreeLineAvatarIconListItem
from kivymd.uix.textfield import MDTextField

KV = '''

<MyItem>:
    _no_ripple_effect: False

    IconLeftWidget:
        icon: "calendar-edit"
    
    IconRightWidget:
        icon: "trash-can"
    
BoxLayout:
    orientation: "vertical"

    MDToolbar:
        title: "НЕДЕЛЯ"
        left_action_items: [["arrow-left"]]
        right_action_items: [["magnify"], ["dots-vertical"]]
        md_bg_color: 0, 0, 0, 1

    MDTabs:
        id: android_tabs
        on_tab_switch: app.on_tab_switch(*args)


<Tab>:
    MDLabel:
        id: label
        halign: "center"
        
    ScrollView:

        MDList:
            id: sorry
'''


class Tab(FloatLayout, MDTabsBase):
    pass

class MyItem(ThreeLineAvatarIconListItem):
    pass

class Text(MDTextField):
    pass

class Example(MDApp):
    def build(self):
        return Builder.load_string(KV)

    def on_start(self):
        for i in range(7):
            days = ["ПОНЕДЕЛЬНИК", "ВТОРНИК", "СРЕДА", "ЧЕТВЕРГ", "ПЯТНИЦА", "СУББОТА", "ВОСКРЕСЕНЬЕ"]
            new_tab = Tab(text=f"{days[i]}")
            self.root.ids.android_tabs.add_widget(new_tab)
            for j in range(5):
                new_tab.ids.sorry.add_widget(MyItem())


    def on_tab_switch(self, instance_tabs, instance_tab, instance_tab_label, tab_text):
        '''Called when switching tabs.

        :type instance_tabs: <kivymd.uix.tab.MDTabs object>;
        :param instance_tab: <__main__.Tab object>;
        :param instance_tab_label: <kivymd.uix.tab.MDTabsLabel object>;
        :param tab_text: text or name icon of tab;
        '''

        instance_tab.ids.label.text = tab_text


Example().run()
